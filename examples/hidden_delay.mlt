type model = Model of string
type fresh = Fresh of model
type cooled = Cooled of fresh
type uvCured = UvCured of cooled
type complete = Complete of uvCured

let printResinModel model = 
    box 7 model as printableModel in 
        (* 3dPrint operation with signature [7]model -> fresh *)
        (delay 7 unbox 7 printableModel as
            printingResult in Fresh printingResult)

let uvCure cooledObject =
    
    let uvCuredObject = box 7 cooledObject as nonUvCuredObject in
    (* uvCure operation with signature [7]cooled -> uvCured *)
    (delay 7 unbox 7 nonUvCuredObject as
        uvCuredObject in UvCured uvCuredObject) in

    uvCuredObject

run
    let freshSword = printResinModel (Model "Sword") in
    box 7 freshSword as boxedSword in 
    let freshHammer = printResinModel (Model "Hammer") in
    unbox 7 boxedSword as cooledSword in 
    box 7 freshHammer as boxedHammer in
    let curedSword = uvCure (Cooled cooledSword) in
    unbox 7 boxedHammer as cooledHammer in
    let curedHammer = uvCure (Cooled cooledHammer) in
    (Complete curedSword, Complete curedHammer)