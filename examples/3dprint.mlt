type model = Model of string
type fresh = Fresh of model
type cooled = Cooled of fresh
type uvCured = UvCured of cooled
type complete = Complete of uvCured

(* Mock 3D printing operation with signature model -> [5]fresh # 7 *)
let printResinModel model = 
  delay 7;
  box 5 (Fresh model) as printingResult in 
  printingResult

(* Mock UV curing operation with signature cooled -> uvCured # 10 *)
let uvCure cooledObject = 
  delay 5;
  UvCured cooledObject

run
    let freshSword = printResinModel (Model "Sword") in
    let freshHammer = printResinModel (Model "Hammer") in
    unbox 5 freshSword as cooledSword in 
    let curedSword = uvCure (Cooled cooledSword) in
    unbox 5 freshHammer as cooledHammer in
    let curedHammer = uvCure (Cooled cooledHammer) in
    (Complete curedSword, Complete curedHammer)

(* Same code as above, but instead using the generic effect versions of box and unbox *)

let printResinModel' model = 
  delay 7;
  box 5 (Fresh model)

let uvCure' cooledObject = 
  delay 5;
  UvCured cooledObject

run
    let freshSword = printResinModel' (Model "Sword") in
    let freshHammer = printResinModel' (Model "Hammer") in
    let cooledSword = unbox 5 freshSword in 
    let curedSword = uvCure' (Cooled cooledSword) in
    let cooledHammer = unbox 5 freshHammer in
    let curedHammer = uvCure' (Cooled cooledHammer) in
    (Complete curedSword, Complete curedHammer)

(* Here it is safe to inline the unboxes into the respective uvCure' function arguments *)

run
    let freshSword = printResinModel' (Model "Sword") in
    let freshHammer = printResinModel' (Model "Hammer") in
    let curedSword = uvCure' (Cooled (unbox 5 freshSword)) in
    let curedHammer = uvCure' (Cooled (unbox 5 freshHammer)) in
    (Complete curedSword, Complete curedHammer)

(* And by inlining even further, we get the following code *)

run
    let freshSword = printResinModel' (Model "Sword") in
    let freshHammer = printResinModel' (Model "Hammer") in
    (Complete (uvCure' (Cooled (unbox 5 freshSword))), 
     Complete (uvCure' (Cooled (unbox 5 freshHammer))))

(* But inlining further is not type safe any more *)

(*
run
    (Complete (uvCure' (Cooled (unbox 5 (printResinModel' (Model "Sword"))))), 
     Complete (uvCure' (Cooled (unbox 5 (printResinModel' (Model "Hammer"))))))
*)
